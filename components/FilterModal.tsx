'use client'

import { useState } from 'react'
import { X, Filter, Sliders } from 'lucide-react'
import { ProductFilters } from '@/types'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–ø—Å–æ–≤ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
interface FilterModalProps {
  isOpen: boolean
  onClose: () => void
  onApplyFilters: (filters: ProductFilters) => void
  initialFilters?: ProductFilters
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
export default function FilterModal({ 
  isOpen, 
  onClose, 
  onApplyFilters, 
  initialFilters 
}: FilterModalProps) {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [filters, setFilters] = useState<ProductFilters>({
    categories: [],
    priceRange: { min: 0, max: 100000 },
    discountRange: { min: 0, max: 100 },
    distance: 10,
    isUrgent: false,
    rating: 0,
    ...initialFilters
  })

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
  const categories = [
    { id: 'dairy', name: '–ú–æ–ª–æ—á–∫–∞', icon: 'ü•õ' },
    { id: 'bakery', name: '–í—ã–ø–µ—á–∫–∞', icon: 'ü•ñ' },
    { id: 'fruits', name: '–§—Ä—É–∫—Ç—ã', icon: 'üçé' },
    { id: 'vegetables', name: '–û–≤–æ—â–∏', icon: 'ü•¨' },
    { id: 'meat', name: '–ú—è—Å–æ', icon: 'ü•©' },
    { id: 'grocery', name: '–ë–∞–∫–∞–ª–µ—è', icon: 'üõí' },
    { id: 'frozen', name: '–ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ', icon: 'üßä' },
    { id: 'beverages', name: '–ù–∞–ø–∏—Ç–∫–∏', icon: 'ü•§' }
  ]

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const handleCategoryChange = (categoryId: string) => {
    setFilters(prev => ({
      ...prev,
      categories: prev.categories.includes(categoryId)
        ? prev.categories.filter(id => id !== categoryId)
        : [...prev.categories, categoryId]
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω–æ–≤–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
  const handlePriceRangeChange = (type: 'min' | 'max', value: number) => {
    setFilters(prev => ({
      ...prev,
      priceRange: {
        ...prev.priceRange,
        [type]: value
      }
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Å–∫–∏–¥–æ–∫
  const handleDiscountRangeChange = (type: 'min' | 'max', value: number) => {
    setFilters(prev => ({
      ...prev,
      discountRange: {
        ...prev.discountRange,
        [type]: value
      }
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
  const handleDistanceChange = (value: number) => {
    setFilters(prev => ({
      ...prev,
      distance: value
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
  const handleRatingChange = (value: number) => {
    setFilters(prev => ({
      ...prev,
      rating: value
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleApplyFilters = () => {
    onApplyFilters(filters)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleResetFilters = () => {
    const resetFilters: ProductFilters = {
      categories: [],
      priceRange: { min: 0, max: 100000 },
      discountRange: { min: 0, max: 100 },
      distance: 10,
      isUrgent: false,
      rating: 0
    }
    setFilters(resetFilters)
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'UZS',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    }).format(price)
  }

  if (!isOpen) return null

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className="modal-content" onClick={(e) => e.stopPropagation()}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
        <div className="flex items-center justify-between p-6 border-b border-neutral-200">
          <div className="flex items-center space-x-2">
            <Filter className="w-5 h-5 text-primary-600" />
            <h2 className="text-lg font-semibold text-neutral-900">
              –§–∏–ª—å—Ç—Ä—ã
            </h2>
          </div>
          <button
            onClick={onClose}
            className="p-2 text-neutral-400 hover:text-neutral-600 transition-colors duration-200"
            aria-label="–ó–∞–∫—Ä—ã—Ç—å"
          >
            <X className="w-5 h-5" />
          </button>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
        <div className="p-6 space-y-6 max-h-[70vh] overflow-y-auto">
          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div>
            <h3 className="text-sm font-medium text-neutral-900 mb-3">
              –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
            </h3>
            <div className="grid grid-cols-2 gap-2">
              {categories.map(category => (
                <label
                  key={category.id}
                  className="flex items-center space-x-2 p-2 rounded-lg border border-neutral-200 hover:bg-neutral-50 cursor-pointer transition-colors duration-200"
                >
                  <input
                    type="checkbox"
                    checked={filters.categories.includes(category.id)}
                    onChange={() => handleCategoryChange(category.id)}
                    className="w-4 h-4 text-primary-600 border-neutral-300 rounded focus:ring-primary-500"
                  />
                  <span className="text-sm text-neutral-700">
                    {category.icon} {category.name}
                  </span>
                </label>
              ))}
            </div>
          </div>

          {/* –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω */}
          <div>
            <h3 className="text-sm font-medium text-neutral-900 mb-3">
              –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω
            </h3>
            <div className="space-y-3">
              <div className="flex items-center space-x-3">
                <input
                  type="number"
                  value={filters.priceRange.min}
                  onChange={(e) => handlePriceRangeChange('min', Number(e.target.value))}
                  placeholder="–û—Ç"
                  className="flex-1 px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
                <span className="text-neutral-500">‚Äî</span>
                <input
                  type="number"
                  value={filters.priceRange.max}
                  onChange={(e) => handlePriceRangeChange('max', Number(e.target.value))}
                  placeholder="–î–æ"
                  className="flex-1 px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
              </div>
              <div className="text-xs text-neutral-500">
                –û—Ç {formatPrice(filters.priceRange.min)} –¥–æ {formatPrice(filters.priceRange.max)}
              </div>
            </div>
          </div>

          {/* –î–∏–∞–ø–∞–∑–æ–Ω —Å–∫–∏–¥–æ–∫ */}
          <div>
            <h3 className="text-sm font-medium text-neutral-900 mb-3">
              –†–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏
            </h3>
            <div className="space-y-3">
              <div className="flex items-center space-x-3">
                <input
                  type="number"
                  value={filters.discountRange.min}
                  onChange={(e) => handleDiscountRangeChange('min', Number(e.target.value))}
                  placeholder="–û—Ç"
                  className="flex-1 px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
                <span className="text-neutral-500">‚Äî</span>
                <input
                  type="number"
                  value={filters.discountRange.max}
                  onChange={(e) => handleDiscountRangeChange('max', Number(e.target.value))}
                  placeholder="–î–æ"
                  className="flex-1 px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
                <span className="text-neutral-500">%</span>
              </div>
              <div className="text-xs text-neutral-500">
                –û—Ç {filters.discountRange.min}% –¥–æ {filters.discountRange.max}%
              </div>
            </div>
          </div>

          {/* –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ */}
          <div>
            <h3 className="text-sm font-medium text-neutral-900 mb-3">
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
            </h3>
            <div className="space-y-3">
              <input
                type="range"
                min="0.5"
                max="20"
                step="0.5"
                value={filters.distance}
                onChange={(e) => handleDistanceChange(Number(e.target.value))}
                className="w-full h-2 bg-neutral-200 rounded-lg appearance-none cursor-pointer slider"
              />
              <div className="text-xs text-neutral-500">
                –î–æ {filters.distance} –∫–º
              </div>
            </div>
          </div>

          {/* –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ */}
          <div>
            <h3 className="text-sm font-medium text-neutral-900 mb-3">
              –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –º–∞–≥–∞–∑–∏–Ω–∞
            </h3>
            <div className="space-y-3">
              <input
                type="range"
                min="0"
                max="5"
                step="0.5"
                value={filters.rating}
                onChange={(e) => handleRatingChange(Number(e.target.value))}
                className="w-full h-2 bg-neutral-200 rounded-lg appearance-none cursor-pointer slider"
              />
              <div className="text-xs text-neutral-500">
                –û—Ç {filters.rating} –∑–≤–µ–∑–¥
              </div>
            </div>
          </div>

          {/* –°—Ä–æ—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã */}
          <div>
            <label className="flex items-center space-x-2 cursor-pointer">
              <input
                type="checkbox"
                checked={filters.isUrgent}
                onChange={(e) => setFilters(prev => ({ ...prev, isUrgent: e.target.checked }))}
                className="w-4 h-4 text-primary-600 border-neutral-300 rounded focus:ring-primary-500"
              />
              <span className="text-sm text-neutral-700">
                –¢–æ–ª—å–∫–æ —Å—Ä–æ—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (—Å –∏—Å—Ç–µ–∫–∞—é—â–∏–º —Å—Ä–æ–∫–æ–º)
              </span>
            </label>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex items-center justify-between p-6 border-t border-neutral-200">
          <button
            onClick={handleResetFilters}
            className="px-4 py-2 text-neutral-600 hover:text-neutral-800 transition-colors duration-200"
          >
            –°–±—Ä–æ—Å–∏—Ç—å
          </button>
          <div className="flex space-x-3">
            <button
              onClick={onClose}
              className="px-4 py-2 border border-neutral-300 text-neutral-700 rounded-lg hover:bg-neutral-50 transition-colors duration-200"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              onClick={handleApplyFilters}
              className="px-6 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors duration-200"
            >
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å
            </button>
          </div>
        </div>
      </div>
    </div>
  )
} 